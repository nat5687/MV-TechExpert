import * as _vercel_node from '@vercel/node';
import { VercelRequest, VercelResponse } from '@vercel/node';
import { renderPage } from 'vite-plugin-ssr';

type HttpResponse = NonNullable<Awaited<ReturnType<typeof renderPage>>['httpResponse']>;
/**
 * Extract useful pageContext from request to give to renderPage(...).
 * It handles internals such as retrieving the original url from `x-now-route-matches` header or from `__original_path` query,
 * so it's highly recommended to use it instead of `request.url`.
 * @param request
 */
declare function getDefaultPageContextInit(request: VercelRequest): {
    url: string;
    body: any;
    cookies: _vercel_node.VercelRequestCookies;
};
/**
 * Send a default empty HTML response
 * @param response
 */
declare function getDefaultEmptyResponseHandler(response: VercelResponse): VercelResponse;
/**
 * Send `httpResponse` through `response`
 * @param response
 * @param httpResponse
 */
declare function getDefaultResponseHandler(response: VercelResponse, httpResponse: HttpResponse): VercelResponse;

export { getDefaultEmptyResponseHandler, getDefaultPageContextInit, getDefaultResponseHandler };
